#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace projec_visual
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Visual_POS")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBalance(Balance instance);
    partial void UpdateBalance(Balance instance);
    partial void DeleteBalance(Balance instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void Insertcategory(category instance);
    partial void Updatecategory(category instance);
    partial void Deletecategory(category instance);
    partial void InsertInvoice_Row(Invoice_Row instance);
    partial void UpdateInvoice_Row(Invoice_Row instance);
    partial void DeleteInvoice_Row(Invoice_Row instance);
    partial void Insertinvoice(invoice instance);
    partial void Updateinvoice(invoice instance);
    partial void Deleteinvoice(invoice instance);
    partial void Insertproduct(product instance);
    partial void Updateproduct(product instance);
    partial void Deleteproduct(product instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::projec_visual.Properties.Settings.Default.Visual_POSConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Balance> Balances
		{
			get
			{
				return this.GetTable<Balance>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<category> categories
		{
			get
			{
				return this.GetTable<category>();
			}
		}
		
		public System.Data.Linq.Table<Invoice_Row> Invoice_Rows
		{
			get
			{
				return this.GetTable<Invoice_Row>();
			}
		}
		
		public System.Data.Linq.Table<invoice> invoices
		{
			get
			{
				return this.GetTable<invoice>();
			}
		}
		
		public System.Data.Linq.Table<product> products
		{
			get
			{
				return this.GetTable<product>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Balances")]
	public partial class Balance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _B_ID;
		
		private string _name;
		
		private System.Nullable<int> _startValue;
		
		private System.Nullable<int> _endValue;
		
		private System.Nullable<long> _start_time;
		
		private System.Nullable<long> _end_time;
		
		private System.Nullable<bool> _isActive;
		
		private EntitySet<invoice> _invoices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnB_IDChanging(long value);
    partial void OnB_IDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnstartValueChanging(System.Nullable<int> value);
    partial void OnstartValueChanged();
    partial void OnendValueChanging(System.Nullable<int> value);
    partial void OnendValueChanged();
    partial void Onstart_timeChanging(System.Nullable<long> value);
    partial void Onstart_timeChanged();
    partial void Onend_timeChanging(System.Nullable<long> value);
    partial void Onend_timeChanged();
    partial void OnisActiveChanging(System.Nullable<bool> value);
    partial void OnisActiveChanged();
    #endregion
		
		public Balance()
		{
			this._invoices = new EntitySet<invoice>(new Action<invoice>(this.attach_invoices), new Action<invoice>(this.detach_invoices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long B_ID
		{
			get
			{
				return this._B_ID;
			}
			set
			{
				if ((this._B_ID != value))
				{
					this.OnB_IDChanging(value);
					this.SendPropertyChanging();
					this._B_ID = value;
					this.SendPropertyChanged("B_ID");
					this.OnB_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startValue", DbType="Int")]
		public System.Nullable<int> startValue
		{
			get
			{
				return this._startValue;
			}
			set
			{
				if ((this._startValue != value))
				{
					this.OnstartValueChanging(value);
					this.SendPropertyChanging();
					this._startValue = value;
					this.SendPropertyChanged("startValue");
					this.OnstartValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endValue", DbType="Int")]
		public System.Nullable<int> endValue
		{
			get
			{
				return this._endValue;
			}
			set
			{
				if ((this._endValue != value))
				{
					this.OnendValueChanging(value);
					this.SendPropertyChanging();
					this._endValue = value;
					this.SendPropertyChanged("endValue");
					this.OnendValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_time", DbType="BigInt")]
		public System.Nullable<long> start_time
		{
			get
			{
				return this._start_time;
			}
			set
			{
				if ((this._start_time != value))
				{
					this.Onstart_timeChanging(value);
					this.SendPropertyChanging();
					this._start_time = value;
					this.SendPropertyChanged("start_time");
					this.Onstart_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_time", DbType="BigInt")]
		public System.Nullable<long> end_time
		{
			get
			{
				return this._end_time;
			}
			set
			{
				if ((this._end_time != value))
				{
					this.Onend_timeChanging(value);
					this.SendPropertyChanging();
					this._end_time = value;
					this.SendPropertyChanged("end_time");
					this.Onend_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit")]
		public System.Nullable<bool> isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Balance_invoice", Storage="_invoices", ThisKey="B_ID", OtherKey="B_ID")]
		public EntitySet<invoice> invoices
		{
			get
			{
				return this._invoices;
			}
			set
			{
				this._invoices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_invoices(invoice entity)
		{
			this.SendPropertyChanging();
			entity.Balance = this;
		}
		
		private void detach_invoices(invoice entity)
		{
			this.SendPropertyChanging();
			entity.Balance = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customers")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _C_ID;
		
		private string _fname;
		
		private string _lname;
		
		private string _phone_number;
		
		private System.Nullable<long> _time_added;
		
		private EntitySet<invoice> _invoices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_IDChanging(long value);
    partial void OnC_IDChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void Onphone_numberChanging(string value);
    partial void Onphone_numberChanged();
    partial void Ontime_addedChanging(System.Nullable<long> value);
    partial void Ontime_addedChanged();
    #endregion
		
		public Customer()
		{
			this._invoices = new EntitySet<invoice>(new Action<invoice>(this.attach_invoices), new Action<invoice>(this.detach_invoices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long C_ID
		{
			get
			{
				return this._C_ID;
			}
			set
			{
				if ((this._C_ID != value))
				{
					this.OnC_IDChanging(value);
					this.SendPropertyChanging();
					this._C_ID = value;
					this.SendPropertyChanged("C_ID");
					this.OnC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="NVarChar(50)")]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="NVarChar(50)")]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this.OnlnameChanging(value);
					this.SendPropertyChanging();
					this._lname = value;
					this.SendPropertyChanged("lname");
					this.OnlnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_number", DbType="NChar(12)")]
		public string phone_number
		{
			get
			{
				return this._phone_number;
			}
			set
			{
				if ((this._phone_number != value))
				{
					this.Onphone_numberChanging(value);
					this.SendPropertyChanging();
					this._phone_number = value;
					this.SendPropertyChanged("phone_number");
					this.Onphone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_added", DbType="BigInt")]
		public System.Nullable<long> time_added
		{
			get
			{
				return this._time_added;
			}
			set
			{
				if ((this._time_added != value))
				{
					this.Ontime_addedChanging(value);
					this.SendPropertyChanging();
					this._time_added = value;
					this.SendPropertyChanged("time_added");
					this.Ontime_addedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_invoice", Storage="_invoices", ThisKey="C_ID", OtherKey="C_ID")]
		public EntitySet<invoice> invoices
		{
			get
			{
				return this._invoices;
			}
			set
			{
				this._invoices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_invoices(invoice entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_invoices(invoice entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.categories")]
	public partial class category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Cat_ID;
		
		private string _name;
		
		private EntitySet<product> _products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCat_IDChanging(long value);
    partial void OnCat_IDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public category()
		{
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cat_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Cat_ID
		{
			get
			{
				return this._Cat_ID;
			}
			set
			{
				if ((this._Cat_ID != value))
				{
					this.OnCat_IDChanging(value);
					this.SendPropertyChanging();
					this._Cat_ID = value;
					this.SendPropertyChanged("Cat_ID");
					this.OnCat_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_product", Storage="_products", ThisKey="Cat_ID", OtherKey="C_ID")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.category = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice_Rows")]
	public partial class Invoice_Row : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PU_ID;
		
		private System.Nullable<int> _count;
		
		private System.Nullable<long> _P_ID;
		
		private System.Nullable<long> _I_ID;
		
		private bool _isfinished;
		
		private EntityRef<invoice> _invoice;
		
		private EntityRef<product> _product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPU_IDChanging(long value);
    partial void OnPU_IDChanged();
    partial void OncountChanging(System.Nullable<int> value);
    partial void OncountChanged();
    partial void OnP_IDChanging(System.Nullable<long> value);
    partial void OnP_IDChanged();
    partial void OnI_IDChanging(System.Nullable<long> value);
    partial void OnI_IDChanged();
    partial void OnisfinishedChanging(bool value);
    partial void OnisfinishedChanged();
    #endregion
		
		public Invoice_Row()
		{
			this._invoice = default(EntityRef<invoice>);
			this._product = default(EntityRef<product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PU_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PU_ID
		{
			get
			{
				return this._PU_ID;
			}
			set
			{
				if ((this._PU_ID != value))
				{
					this.OnPU_IDChanging(value);
					this.SendPropertyChanging();
					this._PU_ID = value;
					this.SendPropertyChanged("PU_ID");
					this.OnPU_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int")]
		public System.Nullable<int> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncountChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("count");
					this.OncountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_P_ID", DbType="BigInt")]
		public System.Nullable<long> P_ID
		{
			get
			{
				return this._P_ID;
			}
			set
			{
				if ((this._P_ID != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnP_IDChanging(value);
					this.SendPropertyChanging();
					this._P_ID = value;
					this.SendPropertyChanged("P_ID");
					this.OnP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_ID", DbType="BigInt")]
		public System.Nullable<long> I_ID
		{
			get
			{
				return this._I_ID;
			}
			set
			{
				if ((this._I_ID != value))
				{
					if (this._invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnI_IDChanging(value);
					this.SendPropertyChanging();
					this._I_ID = value;
					this.SendPropertyChanged("I_ID");
					this.OnI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isfinished", DbType="Bit NOT NULL")]
		public bool isfinished
		{
			get
			{
				return this._isfinished;
			}
			set
			{
				if ((this._isfinished != value))
				{
					this.OnisfinishedChanging(value);
					this.SendPropertyChanging();
					this._isfinished = value;
					this.SendPropertyChanged("isfinished");
					this.OnisfinishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="invoice_Invoice_Row", Storage="_invoice", ThisKey="I_ID", OtherKey="I_ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public invoice invoice
		{
			get
			{
				return this._invoice.Entity;
			}
			set
			{
				invoice previousValue = this._invoice.Entity;
				if (((previousValue != value) 
							|| (this._invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._invoice.Entity = null;
						previousValue.Invoice_Rows.Remove(this);
					}
					this._invoice.Entity = value;
					if ((value != null))
					{
						value.Invoice_Rows.Add(this);
						this._I_ID = value.I_ID;
					}
					else
					{
						this._I_ID = default(Nullable<long>);
					}
					this.SendPropertyChanged("invoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_Invoice_Row", Storage="_product", ThisKey="P_ID", OtherKey="P_ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.Invoice_Rows.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.Invoice_Rows.Add(this);
						this._P_ID = value.P_ID;
					}
					else
					{
						this._P_ID = default(Nullable<long>);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invoices")]
	public partial class invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _I_ID;
		
		private System.Nullable<long> _C_ID;
		
		private System.Nullable<long> _timeDate;
		
		private System.Nullable<bool> _isfinished;
		
		private System.Nullable<long> _B_ID;
		
		private EntitySet<Invoice_Row> _Invoice_Rows;
		
		private EntityRef<Balance> _Balance;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnI_IDChanging(long value);
    partial void OnI_IDChanged();
    partial void OnC_IDChanging(System.Nullable<long> value);
    partial void OnC_IDChanged();
    partial void OntimeDateChanging(System.Nullable<long> value);
    partial void OntimeDateChanged();
    partial void OnisfinishedChanging(System.Nullable<bool> value);
    partial void OnisfinishedChanged();
    partial void OnB_IDChanging(System.Nullable<long> value);
    partial void OnB_IDChanged();
    #endregion
		
		public invoice()
		{
			this._Invoice_Rows = new EntitySet<Invoice_Row>(new Action<Invoice_Row>(this.attach_Invoice_Rows), new Action<Invoice_Row>(this.detach_Invoice_Rows));
			this._Balance = default(EntityRef<Balance>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long I_ID
		{
			get
			{
				return this._I_ID;
			}
			set
			{
				if ((this._I_ID != value))
				{
					this.OnI_IDChanging(value);
					this.SendPropertyChanging();
					this._I_ID = value;
					this.SendPropertyChanged("I_ID");
					this.OnI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_ID", DbType="BigInt")]
		public System.Nullable<long> C_ID
		{
			get
			{
				return this._C_ID;
			}
			set
			{
				if ((this._C_ID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnC_IDChanging(value);
					this.SendPropertyChanging();
					this._C_ID = value;
					this.SendPropertyChanged("C_ID");
					this.OnC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeDate", DbType="BigInt")]
		public System.Nullable<long> timeDate
		{
			get
			{
				return this._timeDate;
			}
			set
			{
				if ((this._timeDate != value))
				{
					this.OntimeDateChanging(value);
					this.SendPropertyChanging();
					this._timeDate = value;
					this.SendPropertyChanged("timeDate");
					this.OntimeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isfinished", DbType="Bit")]
		public System.Nullable<bool> isfinished
		{
			get
			{
				return this._isfinished;
			}
			set
			{
				if ((this._isfinished != value))
				{
					this.OnisfinishedChanging(value);
					this.SendPropertyChanging();
					this._isfinished = value;
					this.SendPropertyChanged("isfinished");
					this.OnisfinishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_ID", DbType="BigInt")]
		public System.Nullable<long> B_ID
		{
			get
			{
				return this._B_ID;
			}
			set
			{
				if ((this._B_ID != value))
				{
					if (this._Balance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnB_IDChanging(value);
					this.SendPropertyChanging();
					this._B_ID = value;
					this.SendPropertyChanged("B_ID");
					this.OnB_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="invoice_Invoice_Row", Storage="_Invoice_Rows", ThisKey="I_ID", OtherKey="I_ID")]
		public EntitySet<Invoice_Row> Invoice_Rows
		{
			get
			{
				return this._Invoice_Rows;
			}
			set
			{
				this._Invoice_Rows.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Balance_invoice", Storage="_Balance", ThisKey="B_ID", OtherKey="B_ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Balance Balance
		{
			get
			{
				return this._Balance.Entity;
			}
			set
			{
				Balance previousValue = this._Balance.Entity;
				if (((previousValue != value) 
							|| (this._Balance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Balance.Entity = null;
						previousValue.invoices.Remove(this);
					}
					this._Balance.Entity = value;
					if ((value != null))
					{
						value.invoices.Add(this);
						this._B_ID = value.B_ID;
					}
					else
					{
						this._B_ID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Balance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_invoice", Storage="_Customer", ThisKey="C_ID", OtherKey="C_ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.invoices.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.invoices.Add(this);
						this._C_ID = value.C_ID;
					}
					else
					{
						this._C_ID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoice_Rows(Invoice_Row entity)
		{
			this.SendPropertyChanging();
			entity.invoice = this;
		}
		
		private void detach_Invoice_Rows(Invoice_Row entity)
		{
			this.SendPropertyChanging();
			entity.invoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.products")]
	public partial class product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _P_ID;
		
		private string _name;
		
		private string _barcode;
		
		private System.Nullable<int> _price;
		
		private System.Nullable<long> _C_ID;
		
		private string _description;
		
		private System.Nullable<int> _size;
		
		private int _qauntity;
		
		private EntitySet<Invoice_Row> _Invoice_Rows;
		
		private EntityRef<category> _category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnP_IDChanging(long value);
    partial void OnP_IDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnbarcodeChanging(string value);
    partial void OnbarcodeChanged();
    partial void OnpriceChanging(System.Nullable<int> value);
    partial void OnpriceChanged();
    partial void OnC_IDChanging(System.Nullable<long> value);
    partial void OnC_IDChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnsizeChanging(System.Nullable<int> value);
    partial void OnsizeChanged();
    partial void OnqauntityChanging(int value);
    partial void OnqauntityChanged();
    #endregion
		
		public product()
		{
			this._Invoice_Rows = new EntitySet<Invoice_Row>(new Action<Invoice_Row>(this.attach_Invoice_Rows), new Action<Invoice_Row>(this.detach_Invoice_Rows));
			this._category = default(EntityRef<category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_P_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long P_ID
		{
			get
			{
				return this._P_ID;
			}
			set
			{
				if ((this._P_ID != value))
				{
					this.OnP_IDChanging(value);
					this.SendPropertyChanging();
					this._P_ID = value;
					this.SendPropertyChanged("P_ID");
					this.OnP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_barcode", DbType="NVarChar(50)")]
		public string barcode
		{
			get
			{
				return this._barcode;
			}
			set
			{
				if ((this._barcode != value))
				{
					this.OnbarcodeChanging(value);
					this.SendPropertyChanging();
					this._barcode = value;
					this.SendPropertyChanged("barcode");
					this.OnbarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int")]
		public System.Nullable<int> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_ID", DbType="BigInt")]
		public System.Nullable<long> C_ID
		{
			get
			{
				return this._C_ID;
			}
			set
			{
				if ((this._C_ID != value))
				{
					if (this._category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnC_IDChanging(value);
					this.SendPropertyChanging();
					this._C_ID = value;
					this.SendPropertyChanged("C_ID");
					this.OnC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="Int")]
		public System.Nullable<int> size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this.OnsizeChanging(value);
					this.SendPropertyChanging();
					this._size = value;
					this.SendPropertyChanged("size");
					this.OnsizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qauntity", DbType="Int NOT NULL")]
		public int qauntity
		{
			get
			{
				return this._qauntity;
			}
			set
			{
				if ((this._qauntity != value))
				{
					this.OnqauntityChanging(value);
					this.SendPropertyChanging();
					this._qauntity = value;
					this.SendPropertyChanged("qauntity");
					this.OnqauntityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_Invoice_Row", Storage="_Invoice_Rows", ThisKey="P_ID", OtherKey="P_ID")]
		public EntitySet<Invoice_Row> Invoice_Rows
		{
			get
			{
				return this._Invoice_Rows;
			}
			set
			{
				this._Invoice_Rows.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_product", Storage="_category", ThisKey="C_ID", OtherKey="Cat_ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public category category
		{
			get
			{
				return this._category.Entity;
			}
			set
			{
				category previousValue = this._category.Entity;
				if (((previousValue != value) 
							|| (this._category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._category.Entity = null;
						previousValue.products.Remove(this);
					}
					this._category.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._C_ID = value.Cat_ID;
					}
					else
					{
						this._C_ID = default(Nullable<long>);
					}
					this.SendPropertyChanged("category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoice_Rows(Invoice_Row entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_Invoice_Rows(Invoice_Row entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
	}
}
#pragma warning restore 1591
